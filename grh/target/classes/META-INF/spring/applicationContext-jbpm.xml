<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jbpm="http://drools.org/schema/drools-spring"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://drools.org/schema/drools-spring http://drools.org/schema/drools-spring-1.5.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- First: declare JBPM JPA Session with a process definition -->
	<jbpm:kbase id="kbase">
		<jbpm:resources>
			<jbpm:resource type="BPMN2"
				source="classpath:META-INF/process-jbpm/processInscription.bpmn" />
			<jbpm:resource type="BPMN2"
				source="classpath:META-INF/process-jbpm/processConvocation.bpmn" />
			<jbpm:resource type="BPMN2"
				source="classpath:META-INF/process-jbpm/processEntretien.bpmn" />
			<jbpm:resource type="BPMN2"
				source="classpath:META-INF/process-jbpm/processDemande.bpmn" />
		</jbpm:resources>
	</jbpm:kbase>
	<jbpm:ksession id="ksession" type="stateful" kbase="kbase">
		<jbpm:configuration>
			<jbpm:jpa-persistence>
				<jbpm:entity-manager-factory ref="entityManagerFactory" />
				<jbpm:transaction-manager ref="transactionManager" />
			</jbpm:jpa-persistence>
		</jbpm:configuration>
	</jbpm:ksession>

	<!-- Declare knowledge agent that scan for changes <jbpm:kagent kbase="kbase" 
		id="kagent" new-instance="false"> <jbpm:resources> <jbpm:resource type="CHANGE_SET" 
		source="${jbpm.kagent.resource.url}" username="admin" password="admin" basic-authentication="enabled" 
		/> </jbpm:resources> </jbpm:kagent> -->

	<!-- Configure the listeners to check changes in guvnor repository <bean 
		class="org.drools.io.ResourceFactory" id="resourceChangeNotifier" factory-method="getResourceChangeNotifierService" 
		init-method="start" /> <bean class="org.drools.io.ResourceFactory" id="resourceChangeScanner" 
		factory-method="getResourceChangeScannerService" init-method="start" /> <jbpm:resource-change-scanner 
		id="scannerInSeconds" interval="10" /> -->

	<!-- Initialize the userCallBack property to default -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"
		depends-on="ksession" id="setUserCallBackProperty">
		<property name="targetClass" value="java.lang.System" />
		<property name="targetMethod" value="setProperty" />
		<property name="arguments">
			<list>
				<value>jbpm.usergroup.callback</value>
				<value>org.jbpm.task.service.DefaultUserGroupCallbackImpl</value>
			</list>
		</property>
	</bean>

	<!-- Declare a TaskServer -->
	<bean class="org.jbpm.task.service.TaskService" id="taskService">
		<constructor-arg ref="entityManagerFactory" />
		<constructor-arg>
			<bean class="org.drools.SystemEventListenerFactory"
				factory-method="getSystemEventListener" />
		</constructor-arg>
	</bean>
	<bean class="org.jbpm.task.service.mina.MinaTaskServer" id="taskServer">
		<constructor-arg ref="taskService" />
		<constructor-arg>
			<value>${mina.server.port}</value>
		</constructor-arg>
	</bean>
	<!-- And start TaskServer on the configured port -->
	<bean class="java.lang.Thread" id="taskServerThread" init-method="start">
		<constructor-arg ref="taskServer" />
	</bean>

	<!-- Declare a TaskClient -->
	<bean class="org.jbpm.task.service.mina.MinaTaskClientConnector"
		id="taskClientConnector">
		<constructor-arg value="taskClient" />
		<constructor-arg>
			<bean class="org.jbpm.task.service.mina.MinaTaskClientHandler">
				<constructor-arg>
					<bean class="org.drools.SystemEventListenerFactory"
						factory-method="getSystemEventListener" />
				</constructor-arg>
			</bean>
		</constructor-arg>
	</bean>
	<bean class="org.jbpm.task.service.TaskClient" id="taskClient"
		depends-on="taskServerThread">
		<constructor-arg ref="taskClientConnector" />
	</bean>

	<!-- Declare a HumanTaskHandler. It uses previously created TaskClient -->
	<bean class="org.jbpm.task.service.AsyncTaskServiceWrapper" id="humanTaskClient">
		<constructor-arg ref="taskClient" />
	</bean>
	<bean class="org.jbpm.process.workitem.wsht.SyncWSHumanTaskHandler"
		id="humanTaskHandler">
		<constructor-arg ref="humanTaskClient" />
		<constructor-arg ref="ksession" />
	</bean>
	<!-- Configure its connection to the local server -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"
		depends-on="humanTaskHandler" id="setConnectionMina">
		<property name="targetObject" ref="humanTaskHandler" />
		<property name="targetMethod" value="setConnection" />
		<property name="arguments">
			<list>
				<value>${mina.client.host}</value>
				<value>${mina.client.port}</value>
			</list>
		</property>
	</bean>
	<!-- And connect HumanTaskHandler (implicit TaskClient connection) -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"
		depends-on="setConnectionMina">
		<property name="targetObject" ref="humanTaskHandler" />
		<property name="targetMethod" value="connect" />
	</bean>

	<!-- Finnaly, register HumanTaskHandler in the session -->
	<bean factory-bean="ksession" factory-method="getWorkItemManager"
		id="workItemManager" />
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject" ref="workItemManager" />
		<property name="targetMethod" value="registerWorkItemHandler" />
		<property name="arguments">
			<list>
				<value>Human Task</value>
				<ref bean="humanTaskHandler" />
			</list>
		</property>
	</bean>
	<!-- Create EmailHandler and register it in the session -->
	<bean class="org.jbpm.process.workitem.email.EmailWorkItemHandler"
		id="emailHandler" />

	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"
		depends-on="emailHandler">
		<property name="targetObject" ref="emailHandler" />
		<property name="targetMethod" value="setConnection" />
		<property name="arguments">
			<list>
				<value>${jbpm.smtp.host}</value>
				<value>${jbpm.smtp.port}</value>
				<value>${jbpm.smtp.username}</value>
				<value>${jbpm.smtp.password}</value>
			</list>
		</property>
	</bean>
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject" ref="workItemManager" />
		<property name="targetMethod" value="registerWorkItemHandler" />
		<property name="arguments">
			<list>
				<value>Email</value>
				<ref bean="emailHandler" />
			</list>
		</property>
	</bean>
</beans>
